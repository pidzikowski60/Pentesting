This lab has a stock check feature which fetches data from an internal system.

To solve the lab, change the stock check URL to access the admin interface at http://192.168.0.12:8080/admin and delete the user carlos.

The stock checker has been restricted to only access the local application, so you will need to find an open redirect affecting the application first.

1. Włączamy zadanie na stronie i uruchamiamy burpa, wybieramy kategorie włączamy intercepta, klikamy check stock i przechwycone połączenie wysyłamy do repetera, również pod check stockiem klikamy next product i połączenie również wysyłamy do repetera, po czym wyłączamy intercepta
2. W repeterze pierwsze połączenie nazywamy check-stock, a drugie połączenie nazywa next-product. W check stock dekodujemy stopck api i zmieniamy linjikę na http://localhost/ dostajemy  powiadomienie 400 bad request invalid url
3. W tym wypadku nie damy rady zrobić złamać check-stocka, ale możemy w next-product zmianić path= na https://www.google.com i klikamy send, jeżeli dostaniemy 200 ok i w renderse zobaczymy google to znaczy, że ten parametr jest wrażliwy na ataki. W zadaniu wyświetlił nam sie google
4. Dalej kopiujemy całą scieżke z początkowego next-product czyli /product/nextProduct?curremtProductId=1&path=/product?productId=2 i podmieniamy go w check-stock w stockapi. Następnie modyfikujemy tą linijkę i wpisujemy http://192.168.0.12:8080/admin (mamy to w zadaniu, dlatego wiemy, aby tego użyć) finalnie linijka tekstu powinna wyglądać tak  /product/nextProduct?curremtProductId=1&path=http://192.168.0.12:8080/admin następnie zaznaczamy wszystko i robime ctrl+u w encode i klikamy send. Otrzymujemy 200 ok i w renderze mamy stronę admina
5. W response wpisujemy carlos i szukamy linijki carlosa do naszej linijki dopisujemy /delete?username=carlos . Linijka powinna wyglądać tak /product/nextProduct?curremtProductId=1&path=http://192.168.0.12:8080/admin/delete?username=carlos zaznaczamy wszystko, klikamy ctrl+u w encoded i klikamy send, otrzymujemy 200 ok  

ENG:
1.Visit a product, click "Check stock", intercept the request in Burp Suite, and send it to Burp Repeater.
2.Try tampering with the stockApi parameter and observe that it isn't possible to make the server issue the request directly to a different host.
3.Click "next product" and observe that the path parameter is placed into the Location header of a redirection response, resulting in an open redirection.
4.Create a URL that exploits the open redirection vulnerability, and redirects to the admin interface, and feed this into the stockApi parameter on the stock checker:
/product/nextProduct?path=http://192.168.0.12:8080/admin
5.Observe that the stock checker follows the redirection and shows you the admin page.
6.Amend the path to delete the target user:
/product/nextProduct?path=http://192.168.0.12:8080/admin/delete?username=carlos