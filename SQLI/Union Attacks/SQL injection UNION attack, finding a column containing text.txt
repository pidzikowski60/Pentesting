This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application's response, so you can use a UNION attack to retrieve data from other tables. To construct such an attack, you first need to determine the number of columns returned by the query. You can do this using a technique you learned in a previous lab. The next step is to identify a column that is compatible with string data.

The lab will provide a random value that you need to make appear within the query results. To solve the lab, perform a SQL injection UNION attack that returns an additional row containing the value provided. This technique helps you determine which columns are compatible with string data.

1. Wejdź na strone do kategorii, po category w url wpisz ' UNION SELECT NULL-- jeżeli mamy error to dodajemy NULL do momentu kiedy nie będzie erroru
2. Po ustaleniu, że są 3 kolumny wpisując ' UNION SELECT NULL,NULL,NULL-- musimy ustalić która kolumna zawiera tekst 
3. Więc zamieniamy NULLE i patrzymy po której zmianie nie dostaniemy błędu. ' UNION SELECT sadsadas,NULL,NULL--
4. Rozwiązanie zadania to: ' UNION SELECT NULL,abc,NULL--


ENG:
1. Go to the category page, after category in the url, enter 'UNION SELECT NULL-- if we have an error, we add NULL until there is no error
2. After determining that there are 3 columns by typing 'UNION SELECT NULL,NULL,NULL-- we need to determine which column contains the text
3. So we replace NULLE and see after which change we will not get an error. ' UNION SELECT sadsadas,NULL,NULL--
4. The solution to the problem is: ' UNION SELECT NULL,abc,NULL--